import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import { FiShare } from "react-icons/fi";
import { motion, useMotionValue, useScroll, useTransform } from "framer-motion";
import { useEffect, useState } from "react";
const inter = Inter({ subsets: ["latin"] });
let clamp = (number: number, min: number, max: number) =>
  Math.min(Math.max(number, min), max);
function useBoundedScroll(bound: number) {
  const { scrollY } = useScroll();
  const scrollYBounded = useMotionValue(0);
  const scrollYBoundedProgress = useTransform(
    scrollYBounded,
    [0, bound],
    [0, 1]
  );

  useEffect(() => {
    return scrollY.onChange((current) => {
      const previous = scrollY.getPrevious();

      const diff = current - previous;

      // update the bounded motion value

      const newScrollYBounded = scrollYBounded.get() + diff;

      // update
      scrollYBounded.set(clamp(newScrollYBounded, 0, bound));
    });
  }, [scrollYBounded, scrollY, bound]);
  return { scrollYBoundedProgress };
}
export default function Home() {
  const [viewPortEntered, setViewPortEntered] = useState(false);
  const { scrollYBoundedProgress } = useBoundedScroll(22);
  const backgroundColor = useTransform(
    scrollYBoundedProgress,
    [0, 1],
    ["#000", "#292524"]
  );
  const status = viewPortEntered ? "inView" : "notInView";

  return (
    <>
      <Head>
        <title>App Store</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" flex  w-full max-w-3xl flex-1 overflow-hidden ">
        <motion.header
          style={{ backgroundColor }}
          className="fixed inset-x-0 flex h-14   justify-between items-center  shadow"
        >
          <span className="text-blue-500 ml-2 text-base flex gap-2">
            <div>&larr;</div>
            <div>Search</div>
          </span>
          <motion.img
            initial={{ opacity: 0 }}
            animate={status}
            variants={{
              inView: {
                opacity: 1,
                transition: {
                  duration: 0.2,
                },
              },
              notInView: {
                opacity: 0,
                transition: {
                  duration: 0.3,
                },
              },
            }}
            className="w-8"
            src="/snap.png"
          />
          <motion.button
            initial={{ opacity: 0 }}
            animate={status}
            variants={{
              inView: {
                opacity: 1,
                transition: {
                  duration: 0.2,
                },
              },
              notInView: {
                opacity: 0,
                transition: {
                  duration: 0.3,
                },
              },
            }}
            className="rounded-full bg-blue-500 text-white px-8 py-2 mr-2 hover:bg-blue-400"
          >
            GET
          </motion.button>
        </motion.header>
        <div className="mt-14 flex gap-6 ml-4">
          <img src="/snap.png" className="w-28" alt="Snapchat Logo" />
          <div>
            <motion.h1
              onViewportEnter={() => setViewPortEntered(false)}
              onViewportLeave={() => setViewPortEntered(true)}
              className="text-xl"
            >
              Snapchat
            </motion.h1>
            <p className="text-neutral-500 text-sm">Share the moment</p>
            <div className="flex items-center gap-4">
              <button className="rounded-full bg-blue-500 text-sm px-8 py-2 mt-6 text-white p-2 hover:bg-blue-400">
                GET
              </button>

              <FiShare className="ml-40 h-10 mt-2 md:ml-96" stroke="#0284C7" />
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
